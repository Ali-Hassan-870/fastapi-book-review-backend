"""add reviews table to db

Revision ID: d054ba752275
Revises: 2db6f51e71cd
Create Date: 2025-08-22 12:44:22.903117

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel  # noqa: F401
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'd054ba752275'
down_revision: Union[str, Sequence[str], None] = '2db6f51e71cd'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('reviews',
    sa.Column('uid', sa.UUID(), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=False),
    sa.Column('review_text', sa.VARCHAR(), nullable=False),
    sa.Column('user_uid', sa.Uuid(), nullable=True),
    sa.Column('book_uid', sa.Uuid(), nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['book_uid'], ['books.uid'], ),
    sa.ForeignKeyConstraint(['user_uid'], ['users.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.drop_constraint(op.f('books_uid_key'), 'books', type_='unique')
    op.drop_constraint(op.f('users_uid_key'), 'users', type_='unique')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(op.f('users_uid_key'), 'users', ['uid'], postgresql_nulls_not_distinct=False)
    op.create_unique_constraint(op.f('books_uid_key'), 'books', ['uid'], postgresql_nulls_not_distinct=False)
    op.drop_table('reviews')
    # ### end Alembic commands ###
